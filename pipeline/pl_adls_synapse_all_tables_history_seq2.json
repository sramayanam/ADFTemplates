{
	"name": "pl_adls_synapse_all_tables_history_seq2",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "@concat('select * from ',pipeline().parameters.ctbl_schema,'.',pipeline().parameters.ctbl_name, ' where  trigger_segment= ''', pipeline().parameters.trigger_segment,''' and start_run=''Y'' and load_type =''', pipeline().parameters.p_load_type,''' and flow_sequence=2 and run_status =''N''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_synapse",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"batchCount": 5,
					"activities": [
						{
							"name": "Data flow1",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "df_adls_synapse_history",
									"type": "DataFlowReference",
									"parameters": {
										"df_schema": {
											"value": "'@{item().target_path}'",
											"type": "Expression"
										},
										"df_table": {
											"value": "'@{item().dest_table}'",
											"type": "Expression"
										},
										"ds_folder": {
											"value": "'@{item().source_path}'",
											"type": "Expression"
										},
										"df_watermark_col": {
											"value": "'@{item().watermark_col}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"source1": {
											"ds_folder": {
												"value": "@item().source_path",
												"type": "Expression"
											},
											"ds_filename": {
												"value": "@concat(item().source_table,'.parquet')",
												"type": "Expression"
											},
											"ds_container": {
												"value": "@item().container",
												"type": "Expression"
											}
										},
										"sink1": {
											"ds_schema": {
												"value": "@item().target_path",
												"type": "Expression"
											},
											"ds_table": {
												"value": "@item().dest_table",
												"type": "Expression"
											}
										}
									}
								},
								"staging": {
									"linkedService": {
										"referenceName": "AzureDataLakeStorage1",
										"type": "LinkedServiceReference"
									},
									"folderPath": {
										"value": "@item().container",
										"type": "Expression"
									}
								},
								"compute": {
									"coreCount": 48,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "Stored procedure update run status true",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Data flow1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@concat(pipeline().parameters.ctbl_schema,'.upd_run_status_true')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"load_type": {
										"value": "history",
										"type": "String"
									},
									"t_sequence": {
										"value": "2",
										"type": "String"
									},
									"t_source_table": {
										"value": {
											"value": "@item().source_table",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSynapseAnalytics1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Stored procedure update run status false",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Data flow1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@concat(pipeline().parameters.ctbl_schema,'.upd_run_status_false')",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"load_type": {
										"value": "history",
										"type": "String"
									},
									"t_sequence": {
										"value": "2",
										"type": "String"
									},
									"t_source_table": {
										"value": {
											"value": "@item().source_table",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSynapseAnalytics1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Stored procedure update run status true",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@empty(item().watermark_col)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Lookup max of watermark column",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlDWSource",
												"sqlReaderQuery": {
													"value": "@concat('select max(',item().watermark_col,') wm_value from ',item().target_path,'.',item().dest_table)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "ds_synapse",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "update watermark in history fs 2 record",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Lookup max of watermark column",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": {
												"value": "@concat(pipeline().parameters.ctbl_schema,'.sp_update_wm_val')",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"flow_sequence": {
													"value": "2",
													"type": "Int32"
												},
												"last_updt_date": {
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"load_type": {
													"value": "history",
													"type": "String"
												},
												"source_name": {
													"value": {
														"value": "@item().source_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"source_table": {
													"value": {
														"value": "@item().dest_table",
														"type": "Expression"
													},
													"type": "String"
												},
												"watermarkval": {
													"value": {
														"value": "@activity('Lookup max of watermark column').output.firstRow.wm_value",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSynapseAnalytics1",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "SP update watermark in current fs 1 record",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "update watermark in history fs 2 record",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": {
												"value": "@concat(pipeline().parameters.ctbl_schema,'.sp_update_wm_val')",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"flow_sequence": {
													"value": "1",
													"type": "Int32"
												},
												"last_updt_date": {
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"load_type": {
													"value": "current",
													"type": "String"
												},
												"source_name": {
													"value": {
														"value": "@item().source_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"source_table": {
													"value": {
														"value": "@item().dest_table",
														"type": "Expression"
													},
													"type": "String"
												},
												"watermarkval": {
													"value": {
														"value": "@activity('Lookup max of watermark column').output.firstRow.wm_value",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSynapseAnalytics1",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ctbl_schema": {
				"type": "string"
			},
			"ctbl_name": {
				"type": "string"
			},
			"trigger_segment": {
				"type": "string"
			},
			"p_load_type": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Ingestion patterns Sql db to Synapse/History"
		},
		"annotations": [],
		"lastPublishTime": "2022-03-11T03:50:35Z"
	}
}