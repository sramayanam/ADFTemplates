{
	"name": "ReviewsGenAIDf",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "ReadCsvFile"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "queryapi",
					"linkedService": {
						"referenceName": "CallCategorize",
						"type": "LinkedServiceReference"
					}
				},
				{
					"name": "ParseFields"
				}
			],
			"scriptLines": [
				"source(output(",
				"          prompt as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadCsvFile",
				"ReadCsvFile call(mapColumn(",
				"          prompt",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     output(",
				"          headers as [string,string],",
				"          body as (completion_tokens as string, content as string, prompt_tokens as string, total_tokens as string),",
				"          status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     format: 'rest',",
				"     store: 'restservice',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     httpMethod: 'POST',",
				"     headerColumnName: 'headers',",
				"     bodyColumnName: 'body',",
				"     statusColumnName: 'status',",
				"     addResponseCode: true,",
				"     requestFormat: ['type' -> 'json'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> queryapi",
				"queryapi parse(body = body.content ? (Category as string,",
				"          SubCategory as string,",
				"          Sentiment as string),",
				"          completiontokens = body.completion_tokens ? string,",
				"          prompttokens = body.prompt_tokens ? string,",
				"          totaltokens = body.total_tokens ? string,",
				"     format: 'json',",
				"     documentForm: 'arrayOfDocuments') ~> ParseFields"
			]
		}
	}
}