{
	"name": "cleancsvdata",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "csvinput",
						"type": "DatasetReference"
					},
					"name": "csvinput"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "CleanData"
				}
			],
			"transformations": [
				{
					"name": "CreateCleanData"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Month } as string,",
				"          {Metric } as string,",
				"          Type as string,",
				"          Value as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> csvinput",
				"csvinput derive({Month } = toDate({Month },'MM/dd/yyyy'),",
				"          Value = toLong(Value,'##,###,###,###,###')) ~> CreateCleanData",
				"CreateCleanData derive(text = concat(concat(concat(concat(concat(concat(toString({Month }), \"|\"),{Metric }),\"|\"),Type),\"|\"),toString(Value))) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['output.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     dateFormat:'yyyy/MM/dd',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          DateTime = {Month },",
				"          Metric = {Metric },",
				"          Type,",
				"          Value,",
				"          text",
				"     ),",
				"     partitionBy('hash', 1)) ~> CleanData"
			]
		}
	}
}